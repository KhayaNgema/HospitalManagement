@model IEnumerable<HospitalManagement.Models.X_RayAppointment>
@inject HospitalManagement.Interfaces.IEncryptionService encryptionService

@{
    ViewData["Title"] = "Appointments";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}

<div class="container-fluid">
    <div class="d-flex align-items-center justify-content-between px-3 py-3 mb-4" style="background-color:#48AAAD;">
        <div class="d-flex align-items-center">
            <a asp-controller="Home" asp-action="Index" class="text-white text-decoration-none d-inline-flex align-items-center back-link me-3">
                <i class="bi bi-chevron-left me-1"></i> Back
            </a>
            <h2 class="mb-0 text-white">Appointments</h2>
        </div>
        <div>
            <button class="btn btn-light btn-sm me-2 filter-btn" data-filter="Assigned">
                <i class="bi bi-hospital-fill text-primary"></i> <span class="btn-text ms-1">Assigned</span>
            </button>
            <button class="btn btn-light btn-sm me-2 filter-btn" data-filter="Completed">
                <i class="bi bi-door-open-fill" style="color:green;"></i> <span class="btn-text ms-1">Completed</span>
            </button>
        </div>

    </div>
    <div class="d-flex justify-content-between align-items-center mb-4 px-3">

        <div class="input-group w-50">
            <span class="input-group-text" id="openScanner" role="button" style="cursor:pointer; background-color:#48AAAD">
                <i class="bi bi-camera" style="font-size: 1.4rem; color:white;"></i>
            </span>
            <input type="text" class="form-control" placeholder="Scan or enter Booking Reference..." id="qrSearchInput">
        </div>
        <div id="qr-reader-wrapper" class="mt-4">
            <div id="qr-reader" style="width: 100%;"></div>
            <div class="scanner-line"></div>
        </div>
    </div>



    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            No appointments found.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-borderless" id="appointmentsTable">
                <thead class="custom-thead">
                    <tr>
                        <th class="text-nowrap"><i class="fas fa-hashtag me-1"></i> Booking##</th>
                        <th class="text-nowrap"><i class="fas fa-user me-1"></i> Patient</th>
                        <th class="text-nowrap"><i class="fas fa-calendar-alt me-1"></i> Date</th>
                        <th class="text-nowrap"><i class="fas fa-clock me-1"></i> Time</th>
                        <th class="text-nowrap"><i class="fas fa-heartbeat me-1"></i> Medical Condition</th>
                        <th class="text-nowrap"><i class="fas fa-heartbeat me-1"></i> Assigned To</th>
                        <th class="text-nowrap"><i class="fas fa-info-circle me-1"></i> Status</th>
                        @if (User.IsInRole("System Administrator"))
                        {
                            <th class="text-nowrap"><i class="fas fa-user-shield me-1"></i> Created By</th>
                            <th class="text-nowrap"><i class="fas fa-calendar-plus me-1"></i> Created At</th>
                            <th class="text-nowrap"><i class="fas fa-user-edit me-1"></i> Updated By</th>
                            <th class="text-nowrap"><i class="fas fa-calendar-check me-1"></i> Last Updated At</th>
                            <th class="text-nowrap"><i class="fas fa-qrcode me-1"></i> QR Code</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var booking in Model)
                    {
                        var encryptedAppointmentId = encryptionService.Encrypt(booking.BookingId);

                        <tr class="clickable-row ellipsis" data-id="@encryptedAppointmentId" data-status="@booking.Status" style="cursor: pointer;">
                            <td>@booking.BookingReference</td>
                            <td>@booking.CreatedBy.FirstName @booking.CreatedBy.LastName</td>
                            <td>@booking.BookForDate.ToString("yyyy/MM/dd")</td>
                            <td>@booking.BookForTimeSlot</td>
                            <td>@booking.MedicalCondition</td>
                            <td>@booking.AssignedTo.FirstName @booking.AssignedTo.LastName</td>
                            <td>@booking.Status</td>
                            @if (User.IsInRole("System Administrator"))
                            {
                                <td>@booking.CreatedBy.FirstName @booking.CreatedBy.LastName</td>
                                <td>@booking.CreatedAt.ToString("yyyy/MM/dd HH:mm")</td>
                                <td>@booking.ModifiedBy.FirstName @booking.ModifiedBy.LastName</td>
                                <td>@booking.LastUpdatedAt.ToString("yyyy/MM/dd HH:mm")</td>
                                <td>
                                    @if (booking.QrCodeImage != null)
                                    {
                                        var base64 = Convert.ToBase64String(booking.QrCodeImage);
                                        var imgSrc = $"data:image/png;base64,{base64}";
                                        <img src="@imgSrc" alt="QR Code" style="width:100px; height:100px;" />
                                    }
                                </td>
                            }
                        </tr>
                    }
                </tbody>

            </table>
            <div id="noResultsMessage" class="alert alert-info text-center" style="display:none;">
                No appointments found.
            </div>
        </div>
    }
</div>

<script src="https://unpkg.com/html5-qrcode"></script>
<script>
    let currentStatusFilter = "";

    function applyFilters() {
        const query = document.getElementById("qrSearchInput").value.trim().toLowerCase();
        const status = currentStatusFilter.toLowerCase();
        let anyVisible = false;

        document.querySelectorAll("#appointmentsTable tbody tr").forEach(row => {
            const bookingRef = row.querySelector("td:first-child")?.textContent.trim().toLowerCase() || "";
            const statusText = row.querySelector("td:nth-child(7)")?.textContent.trim().toLowerCase() || "";

            const matchesSearch = bookingRef.includes(query);
            const matchesStatus = status === "" || statusText === status;

            if (matchesSearch && matchesStatus) {
                row.style.display = "";
                anyVisible = true;
            } else {
                row.style.display = "none";
            }
        });

        document.getElementById("noResultsMessage").style.display = anyVisible ? "none" : "block";
    }

    function filterByStatus(status) {
        currentStatusFilter = status;

        document.querySelectorAll(".filter-btn").forEach(btn => {
            btn.classList.remove("active");
        });

        const activeBtn = document.querySelector(`.filter-btn[data-filter="${status}"]`);
        if (activeBtn) {
            activeBtn.classList.add("active");
        }

        applyFilters();
    }

    document.getElementById("qrSearchInput").addEventListener("keyup", applyFilters);

    const openScanner = document.getElementById("openScanner");
    const qrInput = document.getElementById("qrSearchInput");
    const qrReaderWrapper = document.getElementById("qr-reader-wrapper");

    openScanner.addEventListener("click", () => {
        qrReaderWrapper.style.display = "block";
        qrReaderWrapper.classList.add("active");

        const html5QrCode = new Html5Qrcode("qr-reader");

        Html5Qrcode.getCameras().then(devices => {
            if (devices && devices.length) {
                const cameraId = devices[0].id;
                html5QrCode.start(
                    cameraId,
                    { fps: 10, qrbox: { width: 180, height: 180 } },
                    qrCodeMessage => {
                        qrInput.value = qrCodeMessage;
                        qrInput.dispatchEvent(new Event("keyup"));

                        html5QrCode.stop().then(() => {
                            qrReaderWrapper.style.display = "none";
                            qrReaderWrapper.classList.remove("active");
                            document.getElementById("qr-reader").innerHTML = "";
                        }).catch(err => console.error("Stop error", err));
                    },
                    errorMessage => {
                    }
                ).catch(err => console.error("QR scan error:", err));
            }
        }).catch(err => console.error("Camera error:", err));
    });

    document.addEventListener('DOMContentLoaded', function () {

        filterByStatus("Assigned");

       document.querySelectorAll(".filter-btn").forEach(btn => {
           btn.addEventListener("click", function () {
               const status = this.getAttribute("data-filter");
               filterByStatus(status);
           });
       });

        document.querySelectorAll('#appointmentsTable .clickable-row').forEach(row => {
            row.addEventListener('click', function () {
                const encryptedAppointmentId = this.getAttribute('data-id');
                const url = '@Url.Action("XRayAppointmentDetails", "Appointments")';
                window.location.href = `${url}?appointmentId=${encodeURIComponent(encryptedAppointmentId)}`;
            });
        });
    });
</script>
