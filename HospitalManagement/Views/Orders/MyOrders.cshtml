@model IEnumerable<HospitalManagement.Models.Order>

@{
    ViewData["Title"] = "My Orders";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}

@functions {
    string GetStatusClass(HospitalManagement.Models.OrderStatus status)
    {
        return status switch
        {
            HospitalManagement.Models.OrderStatus.Pending => "status-pending",
            HospitalManagement.Models.OrderStatus.Ready_For_Delivery => "status-ready",
            HospitalManagement.Models.OrderStatus.Collected => "status-collected",
            _ => ""
        };
    }
}

<style>
    .order-card {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 100%;
        border: 1px solid #ccc;
        border-left: 6px solid #48AAAD;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
        margin-bottom: 20px;
        transition: transform 0.2s;
        cursor: pointer;
    }

        .order-card:hover {
            background-color: #f9f9f9;
            transform: translateY(-2px);
        }

    .card-actions {
        padding: 0 15px 15px 15px;
        display: flex;
        justify-content: flex-end;
        margin-top: auto; 
    }


    .order-header {
        background-color: #48AAAD;
        color: white;
        padding: 10px 15px;
        font-size: 25px;
        font-weight: 700;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }

    .order-body {
        padding: 15px;
    }

        .order-body p {
            margin-bottom: 6px;
            color: #555;
        }

    .status-indicator {
        padding: 2px 8px;
        border-radius: 4px;
        color: #333;
        font-weight: bold;
    }

    .status-pending {
        background-color: #fff3cd;
        color: #856404;
    }

    .status-ready {
        background-color: #cce5ff;
        color: #004085;
    }

    .status-collected {
        background-color: #d4edda;
        color: #155724;
    }

    .receipt-container {
        max-width: 500px;
        width: 100%;
        background: #fff;
        border: 1px solid #ccc;
        padding: 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        font-size: 14px;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    .receipt-header {
        text-align: center;
        margin-bottom: 20px;
        border-bottom: 1px dashed #ccc;
        padding-bottom: 10px;
    }

        .receipt-header h4 {
            margin: 0;
            font-weight: bold;
        }

    .receipt-details dt {
        font-weight: 600;
        color: #444;
    }

    .receipt-details dd {
        margin-bottom: 10px;
        color: #333;
    }

   .items-header, .item-row {
        display: flex;
        padding: 6px 0;
        font-size: 14px;
    }

    .items-header {
        font-weight: 700;
        border-bottom: 1px solid #ccc;
        color: #555;
    }

    .item-row {
        border-top: 1px dashed #ccc;
        align-items: center;
    }

    .item-name {
        flex: 2;
    }

    .item-qty {
        flex: 1;
        text-align: center;
    }

    .item-subtotal {
        flex: 1;
        text-align: right;
        font-family: monospace;
    }

    .summary-row {
        margin-top: 15px;
        font-weight: bold;
        text-align: right;
        border-top: 1px dashed #ccc;
        padding-top: 10px;
    }

    .receipt-footer {
        text-align: center;
        font-size: 12px;
        color: #888;
        margin-top: 20px;
        border-top: 1px dashed #ccc;
        padding-top: 10px;
    }

    .btn-details,
    .btn-cancel {
        font-size: 1rem;
        padding: 4px 10px;
        border-radius: 20px;
    }

    .btn-details {
        background-color: #48AAAD;
        color: white;
        border: none;
        margin-right: 6px;
    }

        .btn-details:hover {
            background-color: #3c979a;
        }
</style>

<div class="container-fluid">
    <div class="d-flex align-items-center justify-content-between px-3 py-3 mb-4" style="background-color:#48AAAD;">
        <div class="d-flex align-items-center">
            <a asp-controller="Home" asp-action="Index" class="text-white text-decoration-none d-inline-flex align-items-center back-link me-3">
                <i class="bi bi-chevron-left me-1"></i> Back
            </a>
            <h2 class="mb-0 text-white">My Orders</h2>
        </div>
        <div>
            <button class="btn btn-light btn-sm me-2 filter-btn" data-filter="Pending">
                <i class="bi bi-hourglass-split text-warning"></i>
                <span class="btn-text ms-1">Pending</span>
            </button>

            <button class="btn btn-light btn-sm me-2 filter-btn" data-filter="Ready_For_Delivery">
                <i class="bi bi-box-seam text-primary"></i>
                <span class="btn-text ms-1">Ready for Delivery</span>
            </button>

            <button class="btn btn-light btn-sm filter-btn" data-filter="Collected">
                <i class="bi bi-bag-check-fill text-success"></i>
                <span class="btn-text ms-1">Collected</span>
            </button>
        </div>

    </div>
</div>



@if (TempData["Message"] != null)
{
    <div id="tempDataMessage" class="alert @(TempData["Message"].ToString().Contains("successfully") ? "alert-success" : "alert-danger")" role="alert">
        @Html.Raw(TempData["Message"])
        <span class="close" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </span>
    </div>
}
<div class="alert alert-info text-center" id="noResultsMessage" style="display: none;">
    You don't have meals orders for your filters.
</div>

@if (!Model.Any())
{
}
else
{
    <div class="container-fluid">
        <div class="row g-3" id="ordersContainer">
            @foreach (var item in Model)
            {
                var purchaseModalId = $"purchaseModal_{item.OrderId}";
                <div class="col-12 col-md-6 col-lg-3">
                    <div class="order-card h-100" data-id="@item.OrderId" data-status="@item.Status">
                        <div class="order-header">#@item.LastFourDigitsOfOrderNumber</div>
                        <div class="order-body">
                            <p><strong>Date:</strong> @item.OrderDate.ToString("dd/MM/yyyy  HH:mm")</p>
                            <p><strong>Total:</strong> @item.TotalPrice.ToString("C")</p>
                            <p>
                                <strong>Status:</strong>
                                <span class="status-indicator @GetStatusClass(item.Status)">@item.Status</span>
                            </p>
                        </div>
                        <div class="card-actions">
                            <button class="btn btn-details" data-bs-toggle="modal" data-bs-target="#@purchaseModalId">Proof Of Purchase</button>
                        </div>
                    </div>

                    <div class="modal fade" id="@purchaseModalId" tabindex="-1" aria-labelledby="@($"{purchaseModalId}_Label")" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-sm">
                            <div class="modal-content rounded-4">
                                <div class="modal-header modal-header-custom">
                                    <h5 class="modal-title" id="@($"{purchaseModalId}_Label")">Order - #@item.LastFourDigitsOfOrderNumber</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body d-flex flex-column align-items-center">
                                    @await Html.PartialAsync("_ProofOfPurchasePartial", item)
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>


}

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const cards = document.querySelectorAll('.order-card');
        const filterButtons = document.querySelectorAll('.filter-btn');
        const noResultsMessage = document.getElementById('noResultsMessage');

      

        filterButtons.forEach(button => {
            button.addEventListener('click', () => {
                const selectedStatus = button.getAttribute('data-filter');

                filterButtons.forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');

                let hasVisibleCard = false;

                cards.forEach(card => {
                    const colDiv = card.parentElement; 
                    const cardStatus = card.getAttribute('data-status');
                    const isVisible = selectedStatus === cardStatus;

                    colDiv.style.display = isVisible ? '' : 'none';

                    if (isVisible) hasVisibleCard = true;
                });

                noResultsMessage.style.display = hasVisibleCard ? 'none' : 'block';
            });
        });

        const defaultFilter = document.querySelector('.filter-btn[data-filter="Pending"]');
        if (defaultFilter) defaultFilter.click();

        setTimeout(() => {
            const tempMessage = document.getElementById("tempDataMessage");
            if (tempMessage) tempMessage.style.display = "none";
        }, 7000);
    });
</script>




