@model IEnumerable<HospitalManagement.Models.DeliveryRequest>
@inject HospitalManagement.Interfaces.IEncryptionService encryptionService

@{
    ViewData["Title"] = "Delivery Requests";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}

<div class="container-fluid">
    <div class="d-flex align-items-center justify-content-between px-3 py-3 mb-4" style="background-color:#48AAAD;">
        <div class="d-flex align-items-center">
            <a asp-controller="Home" asp-action="Index" class="text-white text-decoration-none d-inline-flex align-items-center back-link me-3">
                <i class="bi bi-chevron-left me-1"></i> Back
            </a>
            <h2 class="mb-0 text-white">
                <i class="bi bi-box-seam me-2"></i> Delivery Requests
            </h2>
        </div>
        @* Optional controls or filters could be added here if needed *@
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">No medication deliveries found.</div>
    }
    else
    {
        @if (TempData["Message"] != null)
        {
            <div id="tempDataMessage" 
                 class="alert @(TempData["Message"].ToString().Contains("successfully") ? "alert-success" : "alert-danger")" 
                 role="alert">
                @TempData["Message"]
                <button type="button" class="btn-close" aria-label="Close" onclick="this.parentElement.style.display='none';"></button>
            </div>
        }

        <div class="row row-cols-1 row-cols-md-3 g-4 px-3">
            @foreach (var item in Model)
            {
                var encryptedId = encryptionService.Encrypt(item.DeliveryRequestId);
                <div class="col">
                    <div class="card shadow-sm h-100 rounded">
                        <div class="card-body d-flex flex-column justify-content-between">
                            <!-- Delivery Date -->
                            <div class="mb-3 d-flex align-items-center">
                                <i class="bi bi-calendar3-fill text-primary fs-4 me-3"></i>
                                <div>
                                    <h6 class="mb-1 text-muted small text-uppercase">Delivery Date</h6>
                                    <span class="fw-semibold">
                                        @(item.MedicationPescription?.NextCollectionDate?.ToString("ddd, dd MMM yyyy") ?? "N/A")
                                    </span>
                                </div>
                            </div>

                            <!-- Status -->
                            <div class="mb-3 d-flex align-items-center">
                                <i class="bi bi-info-circle-fill text-info fs-4 me-3"></i>
                                <div>
                                    <h6 class="mb-1 text-muted small text-uppercase">Status</h6>
                                    <div>
                                        @if (item.Status == DeliveryRequestStatus.OnTheWay)
                                        {
                                            <span class="badge bg-warning text-dark">Out for Delivery</span>
                                        }
                                        else if (item.Status == DeliveryRequestStatus.Collected)
                                        {
                                            <span class="badge bg-success">Collected</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
