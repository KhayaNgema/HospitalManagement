@model IEnumerable<HospitalManagement.Models.DeliveryRequest>

@{
    ViewData["Title"] = "Pending Medication Deliveries";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";

    string getStatusClass(HospitalManagement.Models.DeliveryRequestStatus status) =>
        status switch
        {
            HospitalManagement.Models.DeliveryRequestStatus.OnTheWay => "status-warning",
            HospitalManagement.Models.DeliveryRequestStatus.Packaged => "status-default",
            HospitalManagement.Models.DeliveryRequestStatus.Collected => "status-success",
            _ => "status-default"
        };
}

<style>
    .order-card-col {
        flex: 0 0 auto;
        max-width: 400px;
        margin-right: 1rem;
        margin-bottom: 1rem;
    }

    .card-receipt {
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.07);
        background-color: #fff;
        display: flex;
        flex-direction: column;
        height: 100%;
        padding: 1rem;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        word-wrap: break-word;      
        overflow-wrap: break-word;  
        white-space: normal !important; 
    }

    .card-header {
        border-bottom: 1px solid #eee;
        margin-bottom: 0.75rem;
        padding-bottom: 0.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        word-wrap: break-word;
        overflow-wrap: break-word;
        white-space: normal !important;
    }

    .order-number {
        font-weight: 700;
        font-size: 1.25rem;
        color: #2c3e50;
        word-wrap: break-word;
        overflow-wrap: break-word;
        white-space: normal !important;
        hyphens: auto;
    }

    .order-status {
        font-weight: 600;
        font-size: 0.9rem;
        text-transform: uppercase;
        word-wrap: break-word;
        overflow-wrap: break-word;
        white-space: normal !important;
    }

    .status-default {
        color: #2980b9;
    }

    .status-warning {
        color: #d39e00;
    }

    .status-success {
        color: #198754;
    }

    .patient-name,
    .address {
        font-size: 0.9rem;
        color: #34495e;
        margin-bottom: 0.4rem;
        display: flex;
        align-items: center;
        gap: 0.4rem;
        flex-wrap: wrap;
        word-wrap: break-word;
        overflow-wrap: break-word;
        white-space: normal !important;
    }

    .patient-name i,
    .address i {
        flex-shrink: 0;
        margin-right: 0.4rem;
        min-width: 20px;
    }

    .delivery-items-list {
        flex-grow: 1;
        margin-top: 0.5rem;
        padding-top: 0.5rem;
        border-top: 1px solid #eee;
        overflow-y: auto;
        max-height: 180px;
        word-wrap: break-word;
        overflow-wrap: break-word;
        white-space: normal !important;
    }

    .delivery-item {
        font-size: 0.9rem;
        padding: 0.25rem 0;
        border-bottom: 1px solid #f5f5f5;
        display: flex;
        justify-content: space-between;
        color: #555;
        align-items: center;
        word-wrap: break-word;
        overflow-wrap: break-word;
        white-space: normal !important;
    }

    .delivery-item span:first-child {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        word-wrap: break-word;
        overflow-wrap: break-word;
        white-space: normal !important;
    }

    .btn-small {
        padding: 0.3rem 0.6rem;
        font-size: 0.85rem;
        border-radius: 6px;
    }

    .d-flex.flex-column.flex-lg-row.flex-lg-wrap.overflow-auto.pb-3 {
        display: flex !important;
        flex-direction: column;
    }
</style>

<div class="container-fluid">
    <div class="d-flex align-items-center justify-content-between px-3 py-3 mb-4" style="background-color:#48AAAD;">
        <div class="d-flex align-items-center">
            <a asp-controller="Home" asp-action="Index" class="text-white d-inline-flex align-items-center back-link me-3" style="text-decoration:none;">
                <i class="bi bi-chevron-left me-1"></i> Back
            </a>
            <h2 class="mb-0 text-white"><strong>Pending Medication Deliveries</strong></h2>
        </div>
    </div>

    @if (TempData["Message"] != null)
    {
        <div id="tempDataMessage" class="alert @(TempData["Message"].ToString().Contains("successfully") ? "alert-success" : "alert-danger")" role="alert">
            @TempData["Message"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info">No pending medication deliveries found.</div>
    }
    else
    {
        <div class="d-flex flex-column flex-lg-row flex-lg-wrap overflow-auto pb-3">
            @foreach (var request in Model)
            {
                var packagedCount = request.DeliveryPackageItems.Count(item => item.IsPackaged);
                var totalCount = request.DeliveryPackageItems.Count;

                <div class="order-card-col col-4 col-md-12 col-lg-4" data-delivery-request-id="@request.DeliveryRequestId">
                    <div class="card card-receipt">
                        <div class="card-header">
                            <div class="order-number">Delivery Request</div>
                            <div class="order-status @getStatusClass(request.Status)" id="delivery-status-@request.DeliveryRequestId">
                                @request.Status.ToString()
                            </div>
                        </div>

                        <div class="patient-name">
                            <i class="fas fa-user icon-patient"></i>
                            Patient: @(request.Patient?.FirstName ?? "N/A") @(request.Patient?.LastName ?? "")
                        </div>

                        <td>
                         <div style="display: flex; align-items: center;">
                           <i class="fas fa-map-marker-alt" style="color: red; margin-right: 5px;"></i>
                           <span>@request.Address</span>
                         </div>
                        </td>



                        <div class="delivery-items-list mt-2">
                            @if (request.DeliveryPackageItems?.Any() ?? false)
                            {
                                foreach (var item in request.DeliveryPackageItems)
                                {
                                    var med = item.Medication;
                                    <div class="delivery-item">
                                        <span>
                                            <i class="fas fa-pills"></i> @med.MedicationName
                                        </span>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-muted">No package items found.</div>
                            }
                        </div>

                        <div class="card-footer d-flex gap-2 justify-content-end">
                            @if (request.Status == HospitalManagement.Models.DeliveryRequestStatus.Packaged)
                            {
                                <button class="btn btn-warning btn-small btn-deliver" data-delivery-request-id="@request.DeliveryRequestId" type="button">
                                    <i class="fas fa-truck"></i> Deliver Medication
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
<script>
    $(function() {
        var token = $('input[name="__RequestVerificationToken"]').val();

        setTimeout(function () {
            $("#tempDataMessage").fadeOut();
        }, 7000);

        function updateStatus(deliveryRequestId, newStatus) {
            var statusDiv = $('#delivery-status-' + deliveryRequestId);
            statusDiv.text(newStatus);
            statusDiv.removeClass('status-default status-warning status-success');

            if (newStatus === 'OnTheWay') {
                statusDiv.addClass('status-warning');
            } else if (newStatus === 'Collected') {
                statusDiv.addClass('status-success');
            } else if (newStatus === 'Packaged') {
                statusDiv.addClass('status-default');
            } else {
                statusDiv.addClass('status-default');
            }
        }

        $('.btn-deliver').on('click', function () {
            var btn = $(this);
            var id = btn.data('delivery-request-id');
            btn.prop('disabled', true);

            $.ajax({
                url: '@Url.Action("DeliverMedication", "Deliveries")',
                type: 'POST',
                data: { deliveryRequestId: id },
                headers: { 'RequestVerificationToken': token },
                success: function () {
                    updateStatus(id, 'OnTheWay');
                    btn.hide();
                    btn.closest('.card-footer').find('.btn-complete-delivery').show().prop('disabled', false);
                },
                error: function () {
                    alert('Failed to update status to OnTheWay. Please try again.');
                    btn.prop('disabled', false);
                }
            });
        });
    });
</script>
}
