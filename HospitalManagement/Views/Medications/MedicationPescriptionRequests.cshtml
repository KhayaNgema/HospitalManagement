@model IEnumerable<HospitalManagement.Models.MedicationPescription>
@inject HospitalManagement.Interfaces.IEncryptionService encryptionService

@{
    ViewData["Title"] = "Medication Dispension Requets";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}

<div class="d-flex align-items-center justify-content-between px-3 py-3 mb-4" style="background-color:#48AAAD;">
    <div class="d-flex align-items-center">
        <a asp-controller="Home" asp-action="Index" class="text-white text-decoration-none d-inline-flex align-items-center back-link me-3">
            <i class="bi bi-chevron-left me-1"></i> Back
        </a>
        <h2 class="mb-0 text-white">Medication Dispension Requests</h2>
    </div>
</div>
<div class="container-fluid px-4 text-center" style="margin-top: 10px;">
    <p id="initialInstruction" class="mb-3 fw-semibold" style="font-size: 1.2rem; color: #48AAAD;">
        Click the camera icon below to scan the Patient's QR code and retrieve their medication dispension request.
    </p>

    <div id="scanBtn">
        <span id="openScanner" role="button" style="cursor:pointer; background-color:#48AAAD; padding: 15px; border-radius: 10px;">
            <i class="bi bi-camera" style="font-size: 3rem; color:white;"></i>
        </span>
    </div>

    <div id="qr-reader-wrapper" class="mt-4" style="display:none;">
        <div id="qr-reader" style="width: 100%;"></div>
        <div class="scanner-line"></div>
    </div>

    <div id="scannerHint" class="mt-2 fw-semibold" style="color:#48AAAD; font-size: 1.1rem;"></div>
    <br />

    <input type="hidden" id="qrSearchInput" />
</div>

@if (!Model.Any())
{
}
else
{
    <div class="container-fluid px-4" id="appointmentsTableContainer">
        <div class="table-responsive">
            <table class="table table-striped table-borderless" id="appointmentsTable">
                <thead class="custom-thead">
                    <tr>
                        <th>Access code</th>
                        <th>Patient</th>
                        <th>Requested By</th>
                        <th>Phone number</th>
                        <th>Status</th>
                        <th>Received At</th>
                        <th>Collect until</th>
                        @if (User.IsInRole("System Administrator"))
                        {
                            <th>Qr code</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var pescriptionRequest in Model)
                    {
                        var encryptedMedicalPescriptionId = encryptionService.Encrypt(pescriptionRequest.MedicationPescriptionId);


                        <tr class="clickable-row ellipsis" data-id="@encryptedMedicalPescriptionId" data-access="@(pescriptionRequest.AccessCode?.ToLower() ?? "n/a")">
                            <td>@(pescriptionRequest.AccessCode ?? "N/A")</td>
                            <td>@($"{pescriptionRequest.Booking.CreatedBy?.FirstName ?? "N/A"} {pescriptionRequest.Booking.CreatedBy?.LastName ?? "N/A"}")</td>
                            <td>
                                @(pescriptionRequest.CreatedBy != null
                                    ? $"{pescriptionRequest.CreatedBy.FirstName ?? "N/A"} {pescriptionRequest.CreatedBy.LastName ?? "N/A"}"
                                    : "N/A")
                            </td>
                            <td>@(pescriptionRequest.CreatedBy.PhoneNumber ?? "N/A")</td>
                            <td>@(pescriptionRequest.Status)</td>
                            <td>@(pescriptionRequest.CreatedAt.ToString("yyyy/MM/dd HH:mm")?? "N/A")</td>
                            <td>@(pescriptionRequest.LastCollectionDate ?.ToString("yyyy/MM/dd") ?? "N/A")</td>
                            @if (User.IsInRole("System Administrator"))
                            {
                                <td>
                                    @if (pescriptionRequest.QrCodeImage != null)
                                    {
                                        var base64 = Convert.ToBase64String(@pescriptionRequest.QrCodeImage);
                                        var imgSrc = $"data:image/png;base64,{base64}";
                                        <img src="@imgSrc" alt="QR Code" style="width:80px; height:80px;" />
                                    }
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
            <div id="noResultsMessage" class="alert alert-info text-center" style="display:none;">
                No records medication collection requests found.
            </div>
        </div>
    </div>

}


<script src="https://unpkg.com/html5-qrcode"></script>
<script>
    const openScanner = document.getElementById("openScanner");
    const wrapper = document.getElementById("qr-reader-wrapper");
    const qrReader = document.getElementById("qr-reader");
    const tableContainer = document.getElementById("appointmentsTableContainer");
    const qrInput = document.getElementById("qrSearchInput");
    const scannerHint = document.getElementById("scannerHint");
    const initialInstruction = document.getElementById("initialInstruction");
    const noResultsMessage = document.getElementById("noResultsMessage");

    let html5QrCode;

    function showScannerHint(message) {
        scannerHint.textContent = message;
    }

    openScanner.addEventListener("click", () => {
        wrapper.style.display = "block";
        openScanner.style.display = "none";
        initialInstruction.style.display = "none";
        showScannerHint("Please hold the QR code straight in front of the camera");

        html5QrCode = new Html5Qrcode("qr-reader");

        Html5Qrcode.getCameras().then(devices => {
            if (devices && devices.length) {
                const cameraId = devices[0].id;

                html5QrCode.start(
                    cameraId,
                    { fps: 10, qrbox: { width: 250, height: 250 } },
                    qrCodeMessage => {
                        qrInput.value = qrCodeMessage.trim().toLowerCase();

                        html5QrCode.stop().then(() => {
                            wrapper.style.display = "none";
                            qrReader.innerHTML = "";
                            scannerHint.textContent = "";
                            openScanner.style.display = "inline-block";
                            filterTable(qrInput.value);
                        });
                    },
                    errorMessage => {
                        if (errorMessage.includes("decode")) {
                            const hints = [
                                "Move the QR code closer to the camera",
                                "Move the QR code farther from the camera",
                                "Move the QR code to the left",
                                "Move the QR code to the right",
                                "Ensure the QR code is fully visible and in good lighting"
                            ];
                            const randomHint = hints[Math.floor(Math.random() * hints.length)];
                            showScannerHint(randomHint);
                        }
                    }
                );
            }
        }).catch(err => console.error("Camera access error:", err));
    });

    function filterTable(query) {
        const rows = document.querySelectorAll("#appointmentsTable tbody tr");
        let anyVisible = false;

        rows.forEach(row => {
            const accessCode = row.getAttribute("data-access");
            if (accessCode === query) {
                row.style.display = "";
                anyVisible = true;
            } else {
                row.style.display = "none";
            }
        });

        noResultsMessage.style.display = anyVisible ? "none" : "block";
        tableContainer.style.display = "block";
    }

    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('#appointmentsTable .clickable-row').forEach(row => {
            row.addEventListener('click', function () {
                const encryptedMedicalPescriptionId = this.getAttribute('data-id');
                const url = '@Url.Action("PescriptionRequest", "Medications")';
                window.location.href = `${url}?medicationPescriptionId=${encodeURIComponent(encryptedMedicalPescriptionId)}`;
            });
        });
    });
</script>
