@model IEnumerable<HospitalManagement.Models.MedicationInventory>
@inject HospitalManagement.Interfaces.IEncryptionService encryptionService

@{
    ViewData["Title"] = "Medication Inventory";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}


<div class="d-flex align-items-center justify-content-between px-3 py-3 mb-4" style="background-color:#48AAAD;">
    <div class="d-flex align-items-center">
        <a asp-controller="Home" asp-action="Index" class="text-white text-decoration-none d-inline-flex align-items-center back-link me-3">
            <i class="bi bi-chevron-left me-1"></i> Back
        </a>
        <h2 class="mb-0 text-white">Medication Inventory</h2>
    </div>
</div>

<div class="d-flex align-items-center mb-4 px-3" style="gap: 1rem;">
    <div class="input-group flex-grow-1" style="max-width: 400px;">
        <input type="text" class="form-control" placeholder="Search by medication name or price" id="qrSearchInput" />
    </div>

<a asp-controller="Suppliers" asp-action="StockMenu" class="btn btn-outline-secondary me-2">
    <i class="fas fa-boxes me-1"></i> Restock
</a>

<a asp-controller="Medications" asp-action="ReceiveStock" class="btn btn-outline-primary">
    <i class="fas fa-box-open me-1"></i> Unbox Stock
</a>

</div>


</div>
@if (TempData["Message"] != null)
{
    <div id="tempDataMessage" class="alert @(TempData["Message"].ToString().Contains("successfully") ? "alert-success" : "alert-danger")" role="alert">
        @Html.Raw(TempData["Message"])
        <span class="close" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </span>
    </div>
}
@if (!Model.Any())
{
    <div class="alert alert-info text-center">
        No medication found.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-borderless" id="appointmentsTable">
            <thead class="custom-thead">
                <tr>	 		
                    <th class="text-nowrap">Medication</th>
                    <th class="text-nowrap">Dosage form</th>
                    <th class="text-nowrap">Strength</th>
                    <th class="text-nowrap">Unit of measure</th>
                    <th class="text-nowrap">Quantity</th>
                    <th class="text-nowrap">Availability status</th>
                    <th class="text-nowrap">Stock level</th>
                     <th class="text-nowrap">View Demand</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="ellipsis">
                        <td>@Html.DisplayFor(modelItem => item.Medication.MedicationName)</td>
                         <td>@Html.DisplayFor(modelItem => item.Medication.DosageForm)</td>
                          <td>@Html.DisplayFor(modelItem => item.Medication.Strength)</td>
                          <td>@Html.DisplayFor(modelItem => item.Medication.UnitOfMeasure)</td>
                        <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                           <td>
                                @(item.Quantity > 0 ? "Available" : "Out of Stock")
                           </td>
                            <td>
                            @{
                                string badgeClass;
                                string icon;
                                string label;

                                if (item.Quantity <= 5)
                                {
                                    badgeClass = "text-bg-danger";
                                    icon = "fas fa-times-circle";
                                    label = "Critical";
                                }
                                else if (item.Quantity <= 10)
                                {
                                    badgeClass = "text-bg-warning text-dark";
                                    icon = "fas fa-exclamation-triangle";
                                    label = "Low";
                                }
                                else if (item.Quantity <= 15)
                                {
                                    badgeClass = "text-bg-primary";
                                    icon = "fas fa-check-circle";
                                    label = "Medium";
                                }
                                else if (item.Quantity <= 20)
                                {
                                    badgeClass = "text-bg-success";
                                    icon = "fas fa-arrow-up";
                                    label = "High";
                                }
                                else
                                {
                                    badgeClass = "text-bg-secondary";
                                    icon = "fas fa-minus-circle";
                                    label = "Very High";
                                }
                            }

                            <span class="badge @badgeClass">
                                <i class="@icon me-1"></i> @label
                            </span>

                    </td>
                     <td>
                <a asp-controller="Reports" asp-action="DemandDashboard" asp-route-medicationId="@item.Medication.MedicationId" 
                   class="btn btn-outline-primary btn-sm">
                    View Demand
                </a>
            </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div id="noItemsMessage" class="alert alert-info text-center" style="display:none;">
        No menu items found for your search.
    </div>
}

@section scripts {
    <script>
        $(document).ready(function () {
            function filterItems() {
                var categoryId = $('#categoryDropdown').val();
                var searchText = $('#qrSearchInput').val().toLowerCase();
                var hasVisible = false;

                $('#appointmentsTable tbody tr').each(function () {
                    var matchesCategory = categoryId === '' || $(this).data('category') == categoryId;
                    var matchesSearch = $(this).text().toLowerCase().includes(searchText);

                    if (matchesCategory && matchesSearch) {
                        $(this).show();
                        hasVisible = true;
                    } else {
                        $(this).hide();
                    }
                });

                if (hasVisible) {
                    $('#noItemsMessage').hide();
                } else {
                    $('#noItemsMessage').show();
                }
            }

            $('#categoryDropdown').on('change', filterItems);
            $('#qrSearchInput').on('input', filterItems);
        });
        setTimeout(function () {
            document.getElementById("tempDataMessage").style.display = "none";
        }, 7000);
    </script>
}
